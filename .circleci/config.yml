version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.3

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build
      - deployDev:
          requires:
            - build
          filters:
            branches:
              only: develop
      - deployQA:
          requires:
            - build
          filters:
            branches:
              only: qa
      - deployProd:
          requires:
            - build
          filters:
            branches:
              only: main

jobs:
  build:
    docker:
      - image: node:lts
    steps:
      - checkout
      - restore_cache:
          keys:
            - admin-app-dependencies-{{ checksum "package.json" }}
            - admin-app-dependencies-
      - run:
          name: Building
          command: |
            node --version
            npm --version
            npm install reactjs
            npx browserslist@latest --update-db
            if [ $CIRCLE_BRANCH == main ]; then
              cat ./deployment_envs/.env.prod > .env
              GENERATE_SOURCEMAP=false
            elif [ $CIRCLE_BRANCH == qa ]; then
              cat ./deployment_envs/.env.qa > .env
              GENERATE_SOURCEMAP=false
            fi
            npm run build:dev
      - save_cache:
          key: admin-app-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: .
          paths:
            - build
  deployDev:
    executor: aws-cli/default
    steps:
      - aws-cli/setup:
          profile-name: circleci
      - attach_workspace:
          at: .
      - run:
          name: Upload
          command: |
            ls -la
            aws --version
            cd build
            aws s3 rm s3://gopev-admin-web-app-dev --recursive
            aws s3 sync . s3://gopev-admin-web-app-dev
  deployQA:
    executor: aws-cli/default
    steps:
      - aws-cli/setup:
          profile-name: circleci
      - attach_workspace:
          at: .
      - run:
          name: Upload
          command: |
            ls -la
            aws --version
            cd build
            aws s3 rm s3://gopev-admin-web-app-qa --recursive
            aws s3 sync . s3://gopev-admin-web-app-qa
  deployProd:
    executor: aws-cli/default
    steps:
      - run:
          command: |
            echo 'export AWS_ACCESS_KEY_ID=$PROD_AWS_ACCESS_KEY_ID' >> "$BASH_ENV"
            echo 'export AWS_SECRET_ACCESS_KEY=$PROD_AWS_SECRET_ACCESS_KEY' >> "$BASH_ENV"
            source "$BASH_ENV"
          name: Set AWS Prod account
      - aws-cli/setup:
          profile-name: circleci-prod
      - attach_workspace:
          at: .
      - run:
          name: Upload
          command: |
            ls -la
            aws --version
            cd build
            aws s3 rm s3://gopev-admin-web-app-prod --recursive
            aws s3 sync . s3://gopev-admin-web-app-prod